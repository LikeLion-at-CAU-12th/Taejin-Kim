{"ast":null,"code":"var _jsxFileName = \"/Users/iclear/Desktop/Univ/club/likelion/session/week11/react-prac/src/pages/UserInfo.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport UserFilter from '../components/user/UserFilter';\nimport UserSection from '../components/user/UserSection';\nimport PageSelection from '../components/user/PageSelection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserInfo = () => {\n  _s();\n  const [userData, setUserData] = useState([]);\n  const [curPage, setCurPage] = useState(); //initial value === undefined\n  const [filter, setFilter] = useState(\"all\"); //색상 넣을 때 얘 이용하세요~\n  return (\n    /*#__PURE__*/\n    //부모태그는 항상 Layout\n    //<h1>은 자식 태그\n    //오렌지색 박스가 ContentBox\n    // UserFilter와 UserCard는 각각의 새로운 컴포넌트로 호출\n    _jsxDEV(MainLayout, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83E\\uDD8112\\uAE30 \\uC544\\uAE30\\uC0AC\\uC790 \\uB9AC\\uC2A4\\uD2B8\\uD83E\\uDD81\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContentBox, {\n        children: [/*#__PURE__*/_jsxDEV(UserFilter, {\n          setFilter: setFilter,\n          setUserData: setUserData,\n          setCurPage: setCurPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(UserSection, {\n          userData: userData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), filter === \"all\" && /*#__PURE__*/_jsxDEV(PageSelection, {\n          curPage: curPage,\n          setUserData: setUserData,\n          setCurPage: setCurPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(UserInfo, \"DxQYHB53hU8X/ldWnBdHqNHmcxo=\");\n_c = UserInfo;\nexport default UserInfo;\n\n// styled-componant로 레이아웃이랑 컨텐트 박스 만들기\nconst MainLayout = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n    // 안쪽에 h1 제목을 넣어줄 것임\n    // 메인 레이아웃 아래에 있는 것들은 & >로 표현가능\n    & > h1{\n        font-size: 3.5rem;\n        margin-top: 5rem;\n        margin-bottom: 5rem;\n    }\n`;\n_c2 = MainLayout;\nconst ContentBox = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 95%;\n    border-radius: 1rem;\n    border: 5px solid #ff7710;\n`;\n_c3 = ContentBox;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"UserInfo\");\n$RefreshReg$(_c2, \"MainLayout\");\n$RefreshReg$(_c3, \"ContentBox\");","map":{"version":3,"names":["React","useState","styled","UserFilter","UserSection","PageSelection","jsxDEV","_jsxDEV","UserInfo","_s","userData","setUserData","curPage","setCurPage","filter","setFilter","MainLayout","children","fileName","_jsxFileName","lineNumber","columnNumber","ContentBox","_c","div","_c2","_c3","$RefreshReg$"],"sources":["/Users/iclear/Desktop/Univ/club/likelion/session/week11/react-prac/src/pages/UserInfo.js"],"sourcesContent":["import React, {useState} from 'react'\nimport styled from 'styled-components'\nimport UserFilter from '../components/user/UserFilter'\nimport UserSection from '../components/user/UserSection'\nimport PageSelection from '../components/user/PageSelection'\n\nconst UserInfo = () => {\n    const [userData, setUserData] = useState([]);\n    const [curPage, setCurPage] = useState(); //initial value === undefined\n    const [filter, setFilter] = useState(\"all\"); //색상 넣을 때 얘 이용하세요~\n  return (\n    //부모태그는 항상 Layout\n    //<h1>은 자식 태그\n    //오렌지색 박스가 ContentBox\n    // UserFilter와 UserCard는 각각의 새로운 컴포넌트로 호출\n    <MainLayout>\n        <h1>🦁12기 아기사자 리스트🦁</h1>\n        <ContentBox>\n            <UserFilter \n            setFilter={setFilter}\n            setUserData={setUserData}\n            setCurPage={setCurPage} />\n            <UserSection userData={userData} />\n            {filter === \"all\" && <PageSelection \n            curPage={curPage}\n            setUserData={setUserData}\n            setCurPage={setCurPage} />}\n        </ContentBox>\n    </MainLayout>\n  )\n}\n\nexport default UserInfo\n\n// styled-componant로 레이아웃이랑 컨텐트 박스 만들기\nconst MainLayout = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n    // 안쪽에 h1 제목을 넣어줄 것임\n    // 메인 레이아웃 아래에 있는 것들은 & >로 표현가능\n    & > h1{\n        font-size: 3.5rem;\n        margin-top: 5rem;\n        margin-bottom: 5rem;\n    }\n`\n\nconst ContentBox = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 95%;\n    border-radius: 1rem;\n    border: 5px solid #ff7710;\n`"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,UAAU,MAAM,+BAA+B;AACtD,OAAOC,WAAW,MAAM,gCAAgC;AACxD,OAAOC,aAAa,MAAM,kCAAkC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC/C;IAAA;IACE;IACA;IACA;IACA;IACAM,OAAA,CAACS,UAAU;MAAAC,QAAA,gBACPV,OAAA;QAAAU,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBd,OAAA,CAACe,UAAU;QAAAL,QAAA,gBACPV,OAAA,CAACJ,UAAU;UACXY,SAAS,EAAEA,SAAU;UACrBJ,WAAW,EAAEA,WAAY;UACzBE,UAAU,EAAEA;QAAW;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC1Bd,OAAA,CAACH,WAAW;UAACM,QAAQ,EAAEA;QAAS;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAClCP,MAAM,KAAK,KAAK,iBAAIP,OAAA,CAACF,aAAa;UACnCO,OAAO,EAAEA,OAAQ;UACjBD,WAAW,EAAEA,WAAY;UACzBE,UAAU,EAAEA;QAAW;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;AAEjB,CAAC;AAAAZ,EAAA,CAxBKD,QAAQ;AAAAe,EAAA,GAARf,QAAQ;AA0Bd,eAAeA,QAAQ;;AAEvB;AACA,MAAMQ,UAAU,GAAGd,MAAM,CAACsB,GAAG;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAAC,GAAA,GAZKT,UAAU;AAchB,MAAMM,UAAU,GAAGpB,MAAM,CAACsB,GAAG;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAAE,GAAA,GAPKJ,UAAU;AAAA,IAAAC,EAAA,EAAAE,GAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAJ,EAAA;AAAAI,YAAA,CAAAF,GAAA;AAAAE,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}