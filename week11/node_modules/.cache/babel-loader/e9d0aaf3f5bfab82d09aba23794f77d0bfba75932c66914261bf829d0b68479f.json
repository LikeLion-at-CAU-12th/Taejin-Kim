{"ast":null,"code":"var _jsxFileName = \"/Users/iclear/Desktop/Univ/club/likelion/homework/Taejin-Kim/week11/src/components/user/PageSelection.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { getPerPage } from '../../apis/userlist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PageSelection = ({\n  curPage,\n  setUserData,\n  setCurPage\n}) => {\n  const handleClick = async page => {\n    const response = await getPerPage(); // 필수과제3관련\n    const offset = 5;\n    const end = page * offset; // 2page에는 6-10\n    console.log(page);\n    console.log(response);\n    setUserData(response.slice(end - 5, end));\n    setCurPage(page);\n  };\n  return /*#__PURE__*/_jsxDEV(SelectionLayout, {\n    children: [1, 2, 3, 4, 5, 6].map(val => /*#__PURE__*/_jsxDEV(PageBox, {\n      // val이랑 curPage랑 같으면 트루 아니면 false -> 이걸로 아래 styled-components에서 색 표현함.\n      $active: val === curPage ? true : false // $붙이면서 애니메이션으로 표현 가능(그냥 권장사항 - 구분 위한 것) - 눌려져있으면 검정, 아니면 회색으로 표현\n      // 페이지 숫자 클릭 할 때마다 새로운 정보 받아와야하니까 handleClick 으로 구현\n      ,\n      onClick: () => handleClick(val),\n      children: val\n    }, val, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = PageSelection;\nexport default PageSelection;\nconst SelectionLayout = styled.div`\n    display: flex;\n    gap: 3rem;\n    margin-bottom: 2rem;\n`;\n_c2 = SelectionLayout;\nconst PageBox = styled.div`\n    font-size: 2rem;\n    color: ${props => props.$active ? \"#000000\" : \"#C9C9C9\"}; // 컬러 값을 동적으로 주기위한 로직 // props로 정보 받아옴\n    &:hover{\n        cursor: pointer;\n        color: white;\n    }\n`;\n_c3 = PageBox;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"PageSelection\");\n$RefreshReg$(_c2, \"SelectionLayout\");\n$RefreshReg$(_c3, \"PageBox\");","map":{"version":3,"names":["React","styled","getPerPage","jsxDEV","_jsxDEV","PageSelection","curPage","setUserData","setCurPage","handleClick","page","response","offset","end","console","log","slice","SelectionLayout","children","map","val","PageBox","$active","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","div","_c2","props","_c3","$RefreshReg$"],"sources":["/Users/iclear/Desktop/Univ/club/likelion/homework/Taejin-Kim/week11/src/components/user/PageSelection.js"],"sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { getPerPage } from '../../apis/userlist'\n\nconst PageSelection = ({curPage, setUserData, setCurPage}) => {\n    const handleClick = async(page) => {\n        const response = await getPerPage(); // 필수과제3관련\n        const offset = 5;\n        const end = page*offset// 2page에는 6-10\n        console.log(page);\n        console.log(response);\n\n        setUserData(response.slice(end-5,end));\n        setCurPage(page);\n    }\n  return (\n    <SelectionLayout>{[1,2,3,4,5,6].map(\n        (val) => \n        <PageBox\n        key={val}\n        // val이랑 curPage랑 같으면 트루 아니면 false -> 이걸로 아래 styled-components에서 색 표현함.\n        $active={val === curPage ? true:false} // $붙이면서 애니메이션으로 표현 가능(그냥 권장사항 - 구분 위한 것) - 눌려져있으면 검정, 아니면 회색으로 표현\n        // 페이지 숫자 클릭 할 때마다 새로운 정보 받아와야하니까 handleClick 으로 구현\n        onClick={() => handleClick(val)}>\n            {val}\n        </PageBox>\n    )}</SelectionLayout>\n  )\n}\n\nexport default PageSelection\n\nconst SelectionLayout = styled.div`\n    display: flex;\n    gap: 3rem;\n    margin-bottom: 2rem;\n`\n\nconst PageBox = styled.div`\n    font-size: 2rem;\n    color: ${(props) => props.$active ? \"#000000\" : \"#C9C9C9\"}; // 컬러 값을 동적으로 주기위한 로직 // props로 정보 받아옴\n    &:hover{\n        cursor: pointer;\n        color: white;\n    }\n`"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,UAAU,QAAQ,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,aAAa,GAAGA,CAAC;EAACC,OAAO;EAAEC,WAAW;EAAEC;AAAU,CAAC,KAAK;EAC1D,MAAMC,WAAW,GAAG,MAAMC,IAAI,IAAK;IAC/B,MAAMC,QAAQ,GAAG,MAAMT,UAAU,CAAC,CAAC,CAAC,CAAC;IACrC,MAAMU,MAAM,GAAG,CAAC;IAChB,MAAMC,GAAG,GAAGH,IAAI,GAACE,MAAM;IACvBE,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;IACjBI,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;IAErBJ,WAAW,CAACI,QAAQ,CAACK,KAAK,CAACH,GAAG,GAAC,CAAC,EAACA,GAAG,CAAC,CAAC;IACtCL,UAAU,CAACE,IAAI,CAAC;EACpB,CAAC;EACH,oBACEN,OAAA,CAACa,eAAe;IAAAC,QAAA,EAAE,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAACC,GAAG,CAC9BC,GAAG,iBACJhB,OAAA,CAACiB,OAAO;MAER;MACAC,OAAO,EAAEF,GAAG,KAAKd,OAAO,GAAG,IAAI,GAAC,KAAM,CAAC;MACvC;MAAA;MACAiB,OAAO,EAAEA,CAAA,KAAMd,WAAW,CAACW,GAAG,CAAE;MAAAF,QAAA,EAC3BE;IAAG,GALHA,GAAG;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMC,CACb;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAkB,CAAC;AAExB,CAAC;AAAAC,EAAA,GAxBKvB,aAAa;AA0BnB,eAAeA,aAAa;AAE5B,MAAMY,eAAe,GAAGhB,MAAM,CAAC4B,GAAG;AAClC;AACA;AACA;AACA,CAAC;AAAAC,GAAA,GAJKb,eAAe;AAMrB,MAAMI,OAAO,GAAGpB,MAAM,CAAC4B,GAAG;AAC1B;AACA,aAAcE,KAAK,IAAKA,KAAK,CAACT,OAAO,GAAG,SAAS,GAAG,SAAS;AAC7D;AACA;AACA;AACA;AACA,CAAC;AAAAU,GAAA,GAPKX,OAAO;AAAA,IAAAO,EAAA,EAAAE,GAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAL,EAAA;AAAAK,YAAA,CAAAH,GAAA;AAAAG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}